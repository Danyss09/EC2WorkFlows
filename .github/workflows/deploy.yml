name: Deploy to EC2

on:
  push:
    branches:
      - main  # Se ejecuta cuando se hace un push en la rama main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Hacer checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # Paso 2: Configurar la clave SSH para conectar con las EC2
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa  # Usar la clave SSH almacenada en los secretos de GitHub
          chmod 600 ~/.ssh/id_rsa
          # Agregar las direcciones IP de las instancias EC2
          ssh-keyscan -H 34.227.115.237 >> ~/.ssh/known_hosts  # IP de la instancia EC2 de Producción 1
          ssh-keyscan -H 44.202.45.103 >> ~/.ssh/known_hosts  # IP de la instancia EC2 de Producción 2
          ssh-keyscan -H 54.173.242.40 >> ~/.ssh/known_hosts  # IP de la instancia EC2 de Producción 3

      # Paso 3: Desplegar a la primera instancia EC2 de Producción
      - name: Deploy to Prod Instance 1
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@34.227.115.237 << 'EOF'
            cd /home/ec2-user/EC2WorkFlows || git clone https://github.com/Danyss09/EC2WorkFlows.git
            cd EC2WorkFlows
            git pull origin main  # Actualizar los archivos del repositorio desde la rama main
            sudo cp index.html /var/www/html/  # Copiar index.html al directorio de Nginx
            sudo systemctl restart nginx  # Reiniciar Nginx para aplicar los cambios
          EOF

      # Paso 4: Desplegar a la segunda instancia EC2 de Producción
      - name: Deploy to Prod Instance 2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@44.202.45.103 << 'EOF'
            cd /home/ec2-user/EC2WorkFlows || git clone https://github.com/Danyss09/EC2WorkFlows.git
            cd EC2WorkFlows
            git pull origin main  # Actualizar los archivos del repositorio desde la rama main
            sudo cp index.html /var/www/html/  # Copiar index.html al directorio de Nginx
            sudo systemctl restart nginx  # Reiniciar Nginx para aplicar los cambios
          EOF

      # Paso 5: Desplegar a la tercera instancia EC2 de Producción
      - name: Deploy to Prod Instance 3
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@54.173.242.40 << 'EOF'
            cd /home/ec2-user/EC2WorkFlows || git clone https://github.com/Danyss09/EC2WorkFlows.git
            cd EC2WorkFlows
            git pull origin main  # Actualizar los archivos del repositorio desde la rama main
            sudo cp index.html /var/www/html/  # Copiar index.html al directorio de Nginx
            sudo systemctl restart nginx  # Reiniciar Nginx para aplicar los cambios
          EOF
