name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Hacer checkout del repositorio
      - name: Checkout repository
        uses: actions/checkout@v2

      # Paso 2: Configurar la clave SSH y la región de AWS
      - name: Set up SSH key and AWS region
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          export AWS_REGION=us-east-1
          ssh-keyscan -H 3.86.86.51 >> ~/.ssh/known_hosts
          ssh-keyscan -H 54.166.247.208 >> ~/.ssh/known_hosts
          ssh-keyscan -H 52.70.93.208 >> ~/.ssh/known_hosts

      # Paso 3: Desplegar a Producción
      - name: Deploy to Production
        run: |
          for ip in 3.86.86.51 54.166.247.208 52.70.93.208; do
            ssh -o StrictHostKeyChecking=no ec2-user@$ip << 'EOF'
              if [ ! -d "/home/ec2-user/EC2WorkFlows" ]; then
                git clone https://github.com/Danyss09/EC2WorkFlows.git /home/ec2-user/EC2WorkFlows
              fi
              cd /home/ec2-user/EC2WorkFlows
              git pull origin main  # Actualizar los archivos desde la rama `main`
              sudo cp index.html /var/www/html/  # Copiar index.html al directorio de Nginx
              sudo systemctl restart nginx  # Reiniciar Nginx
            EOF
          done

      # Paso 4: Registrar instancias en el grupo de destino de producción
      - name: Register instances in production target group
        run: |
          aws elbv2 register-targets --target-group-arn arn:aws:elasticloadbalancing:us-east-1:account-id:targetgroup/GrupoProd --targets \
            Id=i-xxxxxx Id=i-yyyyyy Id=i-zzzzzz
